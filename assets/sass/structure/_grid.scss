
/*
	Grid
*/

$columns: 12;

%row {
	display: block;
	margin: 0 (-$gutter*0.5);
	@include box-sizing(border-box);
	@extend %clearfix;
}

.row {
	@extend %row;
}

@mixin column($n, $col:$columns, $break:'') {
	$nth: ($col / $n);
	@if $break == '' {
		float: left;
		width: percentage((1/$col)*$n);
	    padding: 0 $gutter*0.5;
	    @include box-sizing(border-box);
	    @extend %clearfix;
	    clear: none;
		@if floor($nth) == $nth {
			&:nth-child(#{$nth}n + 1) {
				clear: left; 
			}
		}
	} @else {
		@media screen and (max-width: $break) {
			width: percentage((1/$col)*$n);
			@if floor($nth) == $nth {
				&:nth-child(#{$nth}n + 1) {
					clear: none; 
				}	
			}
		}
	}
}

@mixin offset($n, $col:$columns) {
	margin-left: percentage((1/$col)*$n);
}

@mixin pull-left($n, $col:$columns, $break:'') {
	@include column($n, $col, $break);
	padding: 0 $gutter 0 0;
	clear: both;
}

@mixin pull-right($n, $col:$columns, $break:'') {
	@include column($n, $col, $break);
	padding: 0 0 0 $gutter;
	clear: both;
	float: right;
}

@for $i from 1 to $columns {
  .col-#{$i} { @include column($i); }
  .offset-#{$i} { @include offset($i, $columns); }
}

*[class^="col-"], *[class^="offset-"] {
	@include column(4,4,$mobile);
	@media screen and (max-width: $mobile) {
		margin: 0 0 $gutter 0;
	}
}